name: FastAPI CI/CD

on:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: 3.12.7
  LINTING_TARGET_VERSION: py312

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    outputs:
      linting_done: ${{ steps.set_output.outputs.linting_done }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Commit and push changes if any
        id: check_diff
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if [[ $(git status --porcelain) ]]; then
            git checkout -b lint-fix-run-${{ github.run_id }}
            git add ./
            git commit -m "[Linted] Code is Linted"
            git push -u origin lint-fix-run-${{ github.run_id }}
            echo "true" >> linting_done.txt
          else
            echo "false" >> linting_done.txt
          fi

      - name: Set output for linting_done
        id: set_output
        run: |
          linting_done=$(cat linting_done.txt)
          echo $linting_done
          echo "linting_done=${linting_done}" >> $GITHUB_OUTPUT

  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint
    if: ${{ needs.lint.outputs.linting_done == 'false' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} |
          docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
